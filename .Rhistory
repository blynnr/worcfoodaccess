library(devtools)
#install.packages("kableExtra")
#install.packages("data.table")
install_github("agroimpacts/geospaar", build = TRUE,
auth_token = "d56d468fbe307c1dad3c01856ecb6272b07cb532",
force = TRUE, build_opts = c("--no-resave-data", "--no-manual"))
# install_github("agroimpacts/geospaar", build_vignettes = TRUE,
#      auth_token = "the-token-you-just-generated-pasted-here"))
browseVignettes("geospaar")
?sf::st_write
?sf::st_read
knitr::opts_chunk$set(echo = TRUE)
fnm <- system.file("extdata/CENSUS2010_BG_Worcester3.shp", package = "geospaar")
einjpop <- st_read(dsn = fnm)
library(sf)
fnm <- system.file("extdata/CENSUS2010_BG_Worcester3.shp", package = "geospaar")
einjpop <- st_read(dsn = fnm)
fnm <- system.file("extdata/CENSUS2010TRACTS_POLY.shp", package = "geospaar")
einjpop <- st_read(dsn = fnm)
fnm <- system.file("extdata/CENSUS2010TRACTS_POLY.shp", package = "worcfoodaccess")
einjpop <- st_read(dsn = fnm)
?sf::st_read
fnm <- system.file("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/CENSUS2010TRACTS_POLY.shp", package = "worcfoodaccess")
einjpop <- st_read(dsn = fnm)
# install_github("agroimpacts/geospaar", build_vignettes = TRUE,
#      auth_token = "the-token-you-just-generated-pasted-here"))
browseVignettes("geospaar")
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(knitr)
library(kableExtra)
#library(worcfoodaccess)
# set working directory
#setwd("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/") # do I actually need to do this?
# read in Worcester city boundary
matowns <- read_sf("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/TOWNS_POLY.shp")
matowns
# read in census block groups
macbg <- read_sf("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/CENSUS2010BLOCKGROUPS_POLY.shp")
macbg
# read in environmental justice shape files
maejpop <- read_sf("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/EJ_POLY.shp")
maejpop
# filter out Worcester boundary
worcbound <- matowns %>% filter(TOWN == "WORCESTER")
worcbound <- matowns %>% filter(TOWN == "WORCESTER")
matowns
# filter out Worcester boundary
worcbound <- matowns %>% filter(TOWN == "WORCESTER")
typeof(matowns)
# filter out Worcester boundary
worcbound <- matowns %>% st_as_sf %>%  filter(TOWN == "WORCESTER")
worcbound <- matowns %>% st_as_sf
typeof(worcbound)
# filter out Worcester boundary
worcbound <- matowns %>% st_as_sf() %>%  filter(TOWN == "WORCESTER")
worcbound <- matowns %>% st_as_sf()
typeof(worcbound)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(knitr)
library(kableExtra)
#library(worcfoodaccess)
# set working directory
#setwd("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/") # do I actually need to do this?
# read in Worcester city boundary
matowns <- read_sf("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/TOWNS_POLY.shp")
matowns
# read in census block groups
macbg <- read_sf("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/CENSUS2010BLOCKGROUPS_POLY.shp")
macbg
# read in environmental justice shape files
maejpop <- read_sf("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/EJ_POLY.shp")
maejpop
# filter out Worcester boundary
worcbound <- matowns %>% st_as_sf() %>%  filter(TOWN == "WORCESTER")
View(matowns)
class(matowns)
library("dplyr", lib.loc="~/R/win-library/3.5")
# filter out Worcester boundary
worcbound <- matowns %>% st_as_sf() %>%  filter(TOWN == "WORCESTER")
# filter out Worcester boundary
worcbound <- matowns %>% st_as_sf() %>%  filter(TOWN == "WORCESTER")
#%>% st_geometry() %>% plot()
# isolate cbg polygons within Worcester
cbg <- macbg %>% filter(GEOID10 %in% 250277301001:250277331022) #%>% plot()
# isolate ejpop polygons within Worcester
ejpop <- maejpop %>% filter(TOWN == "WORCESTER") # in our practice and assignments, the data was properly formatted, but what are best practices when using shape files for preparing data for analysis? for names of columns, excessive columns, etc?
#%>% plot()
ejcol <- brewer.pal(n = 5, name = "Dark2")
library(RColorBrewer)
# define color scheme
ejcol <- brewer.pal(n = 5, name = "Dark2")
# plot polygons
plot(worcbound[1], col = "grey", main = "Worcester Environmental Justice Populations", reset=F) # need when plotting sf objects over other sf objects
plot(ejpop["EJ_CRITERI"], col = ejcol, add = TRUE)
# install and load packages
library(plyr)
library(ggplot2)
library(rgeos)
library(maptools)
library(plyr)
library(dplyr)
?geom_map
View(ejpop)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(knitr)
library(kableExtra)
library(plyr) # must be before dplyr
library(dplyr)
library(RColorBrewer)
#library(worcfoodaccess)
# testing attribute display indexing method
plot(ejpop$MINORITY, col = "blue")
# earlier attempts
#worcejpop <- ejpop$EJ_CRITERI %>% st_as_sf()
# worcbound %>% st_geometry() %>% plot(., col="grey")
# ejpop["EJ_CRITERI"] %>% plot(., col=rainbow(5, start = 0.65, end = 0.9), add = TRUE)
# define color scheme
ejcol <- brewer.pal(n = 5, name = "Dark2")
# plot polygons
plot(worcbound[1], col = "grey", main = "Worcester Environmental Justice Populations", reset=F) # need when plotting sf objects over other sf objects
plot(ejpop["EJ_CRITERI"], col = ejcol, add = TRUE)
# testing attribute display indexing method
plot(ejpop$MINORITY, col = "blue")
# testing attribute display indexing method
plot(ejpop["MINORITY"], col = "blue")
# testing attribute display indexing method
plot(ejpop["INCOME"], col = "blue")
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI))
ejcol <- brewer.pal(n = 5, name = "Dark2")
class(ejcol)
class(ejpop)
ggplot(worcbound[1]) + geom_sf() +
geom_sf(data = ejpop$EJ_CRITERI, col = ejcol)
ggplot(worcbound[1]) + geom_sf() +
geom_sf(data = ejpop, fill = EJ_CRITERI, col = ejcol)
ggplot(worcbound[1]) + geom_sf() +
ggplot(ejpop) + geom_sf(aes(fill = EJ_CRITERI), col = ejcol)
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI), col = ejcol) +
geom_sf(worcbound[1])
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI), col = ejcol)
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI)) +
scale_color_brewer(palette = "Dark2")
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI)) +
scale_color_brewer(palette = "Set1")
plot(ejpop["EJ_CRITERI"], col = ejcol, add = TRUE) # makes census groups all different colors, but not according to their actual attribute values
# define color scheme
ejcol <- brewer.pal(n = 5, name = "Dark2")
plot(ejpop["EJ_CRITERI"], col = ejcol, add = TRUE) # makes census groups all different colors, but not according to their actual attribute values
plot(worcbound[1], col = "grey", main = "Worcester Environmental Justice Populations", reset=F) # need reset when plotting sf objects over other sf objects
plot(ejpop["EJ_CRITERI"], col = ejcol, add = TRUE)
?geom_area
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI)) +
geom_polygon(aes(color = lab))
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI)) +
geom_polygon(aes(color = EJ_CRITERI))
?geom_polygon
# trying to just map ejpop with color brewer
ejpop_sf <- st_as_sf(ejpop, coords = c("longitude", "latitude"))
# trying to just map ejpop with color brewer
ejpop_sf <- st_as_sf(ejpop, coords = c("longitude", "latitude")) %>% plot()
ggplot(ejpop_sf) +
geom_sf(aes(fill = EJ_CRITERI)) +
geom_polygon(aes(color = EJ_CRITERI)) # need to specify x, y astetics, but how??
class(ejpop_sf)
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI)) +
geom_polygon(aes(color = EJ_CRITERI)) # need to specify x, y astetics, but how??
# isolate ejpop polygons within Worcester
ejpop <- maejpop %>% st_as_sf() %>% filter(TOWN == "WORCESTER") # in our practice and assignments, the data was properly formatted, but what are best practices when using shape files for preparing data for analysis? for names of columns, excessive columns, etc?
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI), col = ejcol) +
geom_sf(worcbound[1])
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI)) +
geom_polygon(aes(color = EJ_CRITERI)) # need to specify x, y astetics, but how??
plot(ejpop["EJ_CRITERI"])
plot(ejpop["EJ_CRITERI"], main = "Environmental Justice Populations in Worcester")
# create color pal
library(RColorBrewer)
pal <- brewer.pal(5, "Dark2")
class(pal)
plot(ejpop["EJ_CRITERI"], main = "Environmental Justice Populations in Worcester", pal = pal)
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI)) +
scale_fill_brewer(palette = "Dark2")
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI)) +
scale_fill_brewer(palette = "Dark2") +
ggtitle("Environmental Justice Populations in Worcester, MA")
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI)) +
scale_fill_brewer(palette = "Dark2") +
ggtitle("EJ Populations in Worcester, MA")
sf::plot(ejpop["EJ_CRITERI"], main = "Environmental Justice Populations in Worcester", pal = pal)
plot(ejpop["EJ_CRITERI"], main = "Environmental Justice Populations in Worcester", pal = pal)
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI), legend = polygon) +
scale_fill_brewer(palette = "Dark2") +
ggtitle("EJ Populations in Worcester, MA")
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(knitr)
library(kableExtra)
library(plyr) # must be before dplyr
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(rgeos) # w ggplot output
library(maptools) # w ggplot output
#library(worcfoodaccess)
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI), legend = polygon) +
scale_fill_brewer(palette = "Dark2") +
ggtitle("EJ Populations in Worcester, MA")
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI), legend = polygon) +
scale_fill_brewer(palette = "Dark2") +
ggtitle("EJ Populations in Worcester, MA") +
scale_color_hue(labels = c("Income", "Minority", "Minority and English Isolation", "Minority and Income", "Minority, Income, and English Isolation"))
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI), legend = polygon) +
scale_fill_brewer(palette = "Dark2") +
ggtitle("EJ Populations in Worcester, MA") +
scale_color_manual(labels = c("Income", "Minority", "Minority and English Isolation", "Minority and Income", "Minority, Income, and English Isolation"))
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI), legend = polygon) +
scale_fill_brewer(palette = "Dark2") +
ggtitle("EJ Populations in Worcester, MA") +
scale_fill_manual(labels = c("Income", "Minority", "Minority and English Isolation", "Minority and Income", "Minority, Income, and English Isolation"))
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI), legend = polygon) +
scale_fill_brewer(palette = "Dark2") +
ggtitle("EJ Populations in Worcester, MA") +
scale_fill_manual(values = "Dark2", labels = c("Income", "Minority", "Minority and English Isolation", "Minority and Income", "Minority, Income, and English Isolation"))
colors <- "Dark2"
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI), legend = polygon) +
scale_fill_brewer(palette = colors) +
ggtitle("EJ Populations in Worcester, MA") +
scale_fill_manual(values = colors, labels = c("Income", "Minority", "Minority and English Isolation", "Minority and Income", "Minority, Income, and English Isolation"))
brewer.pal(n = 5, name = "Dark2")
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI), legend = polygon) +
scale_fill_brewer(palette = "Dark2") +
ggtitle("EJ Populations in Worcester, MA") +
scale_fill_manual(values = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#66A61E"), labels = c("Income", "Minority", "Minority and English Isolation", "Minority and Income", "Minority, Income, and English Isolation"))
ggplot(ejpop) +
geom_sf(aes(fill = EJ_CRITERI), legend = polygon) +
scale_fill_brewer(palette = "Dark2") +
ggtitle("EJ Populations in Worcester, MA") +
scale_fill_manual(values = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#66A61E"), labels = c("Income", "Minority", "Minority and English Isolation", "Minority and Income", "Minority, Income, and English Isolation"), name = "EJ Population\nCriteria") # how could I have done this without listing the hex codes
# install_github("agroimpacts/geospaar", build_vignettes = TRUE,
#      auth_token = "the-token-you-just-generated-pasted-here"))
browseVignettes("geospaar")
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(knitr)
library(kableExtra)
library(plyr) # must be before dplyr
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(rgeos) # w ggplot output
library(maptools) # w ggplot output
#library(worcfoodaccess)
getwd()
# set working directory
#setwd("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/") # do I actually need to do this?
# read in Worcester city boundary
matowns <- read_sf("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/TOWNS_POLY.shp")
matowns
# read in census block groups
macbg <- read_sf("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/CENSUS2010BLOCKGROUPS_POLY.shp")
macbg
# read in environmental justice shape files
maejpop <- read_sf("C:/Users/Brenna Robeson/OneDrive/GEOG346/worcfoodaccess/inst/extdata/EJ_POLY.shp")
maejpop
